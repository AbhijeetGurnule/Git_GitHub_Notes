Configuration of GIT 

	- To give name or to display name globally what people will see us by our name
	git config --global user.name "<My Name>"
	
	- To identify us by our email 
	git config --global user.email "<My Email ID>"
	
	- To show what have we configured 
	git config --list

---------------------------------------------------------------------------------------------------

Clone

Clone - Cloning a repository on our local machine

	git clone <link>

How to clone a repository?
	- Go to Github > Code > Click on "<> code" [green button]
	- Copy the link by HTTPS
	- Git clone <Paste the link>
	- Done

---------------------------------------------------------------------------------------------------

Status

Status - Displays the start of the code

	git status

Types of Status

	1. Untracked
	New files that git doesn't yet track
	
	2. Modified
	Made changes into the files
	
	3. Unmodified
	Nothing change in file

	4. Staged
    Files is ready to be committed

---------------------------------------------------------------------------------------------------

Add

Add - It adds new or changed files in your working directory to the git staging area.

	git add <file name>
	git add . [To add multiple files into staging area at once]

---------------------------------------------------------------------------------------------------

Commit

Commit - It is the record of changes

	git commit -m "some understandable/meaningfull message"

---------------------------------------------------------------------------------------------------

Push

Push - upload local repo content to remote repo

	git push origin main

	{<Command "Git push"> <Name of the remote copy ex. Our github proile named as "origin"> <Branch Name "main">}

---------------------------------------------------------------------------------------------------

Init

Init - used to create a new git repo

	git init
	git remote add origin <link>
	git remote -v [to verify remote]
	git branch [to check branch]
	git branch -m main [to rename branch]
	git push origin main

---------------------------------------------------------------------------------------------------

Branch

	git branch - to view on which branch we are currently working

	git branch -M main (to rename branch name)

	git checkout <branch name> - to jump onto another branch / to navigate
	
	Git checkout -b feature1 - to create a new branch named as "feature1"
	git checkout -b <new branch name> - to create  a new branch

	git branch -d <branch name> - to delete branch 
	Ex. Git branch -d feature2 -> it will delete a branch 
	[Note : We can't delete the same working branch on which we are working/ current working branch.
    Ex. If we are working on branch feature2 then we can't delete the feature2 branch]


Switch to new branch "feature1" by git checkout feature1
Now we are on feature1 branch,
here we can make changes to files, or start working on new task.
git add.
git commit
git push origin feature1
	- Go to GitHub, notice feature1 branch is available now on GitHub repo 



We want to merge our feature into main branch:

Way 1: Through git (from local)
	
    git diff <branch name> (to compare commits, branches, files & more)

	git merge <branch name> (to merge 2 branches)
	Ex. Git merge main = it means we are merging our feature1 branch into main branch

Way 2: Through GitHub PR (pull request)

Click on "Compare & pull request"
It will open new window for open a pull request

	- Add new feature
	- Add comment
	- Create pull request
	- Merge pull request

But……
Still all changes which we have done is on GitHub and not the local PC

Changes are still not highlight on local, We need to use pull command to get into local

---------------------------------------------------------------------------------------------------

Pull

Pull - It used to fetch and download content from a remote repo and immediately update the local repo to match that content.

	git pull origin main 

---------------------------------------------------------------------------------------------------